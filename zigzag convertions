char* convert(char* s, int numRows) {
    if (numRows == 1 || numRows >= strlen(s)) {
        return strdup(s);
    }

    int len = strlen(s);
    char** rows = (char**)malloc(sizeof(char*) * numRows);
    int* rowLens = (int*)calloc(numRows, sizeof(int));

    for (int i = 0; i < numRows; i++) {
        rows[i] = (char*)malloc((len + 1) * sizeof(char));
        rows[i][0] = '\0';
    }

    int currRow = 0;
    int goingDown = 0;

    for (int i = 0; i < len; i++) {
        int rowLen = rowLens[currRow];
        rows[currRow][rowLen] = s[i];
        rows[currRow][rowLen + 1] = '\0';
        rowLens[currRow]++;

        if (currRow == 0 || currRow == numRows - 1)
            goingDown = !goingDown;

        currRow += goingDown ? 1 : -1;
    }

    char* result = (char*)malloc((len + 1) * sizeof(char));
    result[0] = '\0';

    for (int i = 0; i < numRows; i++) {
        strcat(result, rows[i]);
        free(rows[i]);
    }

    free(rows);
    free(rowLens);

    return result;
}
